version: "3"

name: app-development 

services:
  server:
    container_name: server-dev
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    ports:
      - 3000:3000
    volumes:
      - server-data:/app/resources
    networks:
      - devnet
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
  
  client:
    container_name: client-dev
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    ports:
      - 4200:4200
    networks:
      - devnet

    depends_on:
      - server

  database:
    container_name: pg-database
    # image: postgres:16.2-alpine3.19
    image: postgres:12.18
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - 5433:5432
    env_file:
      # Note: Change this example file path
      - .database-env.example
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 20s
      retries: 5
      start_period: 30s  
    networks:
      - devnet
  
  redis:
    container_name: redis
    image: redis:alpine
    volumes:
      - redis-data:/data
    ports:
      - 6380:6379
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
      interval: 1s
      timeout: 3s
      retries: 5
    networks:
      - devnet

networks:
  devnet:

volumes:
  server-data:
  db-data:
  redis-data: